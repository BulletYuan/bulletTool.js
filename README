该工具是我之前用到的一些功能，然后将他们封装打包成一个js库，方便以后的调用。
主要的方法有：(mainly functions)
####时间类-timeClass####
timestamp()                                                                       //获取十三位时间戳，精确到毫秒
timestamp_10()                                                                    //获取十位时间戳，精确到秒
timeFormat({ts:timestamp,format:'yyyy mm dd HH:MM:SS'})                           //将时间戳转化为格式化字符串
                                                                                  //y:年;m:月;d:日;H:时;M:分;S:秒;
####网址类-urlClass####
url.getParams({url:'https://github.com/BulletYuan/?a=a1'})                        //将URL参数（若没有则获取当前页面的网址）后的
                                                                                  //search部分，转换为对象
url.toUrl({a:a1})                                                                 //将对象参数（若没有则获取上一次网址转化为对象的结果）
                                                                                  //转换为URL参数，不含'?'
####Cookie类-cookieClass####
cookie.getCookies()                                                               //获取当前页面的所有cookie，以对象形式返回
cookie.getCookie('key')                                                           //获取当前页面的键名为'key'的cookie，返回值内容
cookie.setCookie('key','value',exdays)                                            //为当前页面添加键值分别为'key','value'的cookie条目，
                                                                                  //并设置有效时间为exdays（数字），返回新的页面
                                                                                  //cookie对象形式
cookie.deleteCookie('key')                                                        //删除当前页面的键名为'key'的cookie，返回新的页面
                                                                                  //cookie对象形式
####网络请求类-ajaxClass####
ajax({
  type:'GET',                                                                     //请求类型：GET,POST,PUT,DELETE
  url:'https://github.com/BulletYuan/',                                           //请求地址
  dataType:'JSON',                                                                //返回值类型：JSON,XML
  async:true,                                                                     //请求异步标识：true,false
  data:{a:'a1'},                                                                  //请求数据，对象形式
  header:{Content-Type:'application/json;charset=UTF-8'},                         //请求header自定义，对象形式
  success:(res,status,readyState)=>{ console.log(res,status,readyState) },        //请求成功回调函数，res:返回内容;
                                                                                  //status:(200: "OK"
                                                                                  //404: 未找到页面
                                                                                  //500：服务器内部错误
                                                                                  //(其余对应服务器状态码));
                                                                                  //readyState:(0: 请求未初始化
                                                                                  //1: 服务器连接已建立
                                                                                  //2: 请求已接收
                                                                                  //3: 请求处理中
                                                                                  //4: 请求已完成，且响应已就绪);
  error:(status,readyState)=>{ console.log(status,readyState) }                   //请求失败回调函数，
                                                                                  //status:(200: "OK"
                                                                                  //404: 未找到页面
                                                                                  //500：服务器内部错误
                                                                                  //(其余对应服务器状态码));
                                                                                  //readyState:(0: 请求未初始化
                                                                                  //1: 服务器连接已建立
                                                                                  //2: 请求已接收
                                                                                  //3: 请求处理中
                                                                                  //4: 请求已完成，且响应已就绪);
})
####页面滑拉类-pageScrollClass####
scrollPage({
	el:document.getElementsByTagName('body').item(0),		  //需要监听下滑或上拉事件的元素
									  //不传该值，则默认为监听"body"
	scorllUp:function(e){},						  //页面上拉加载更多事件
	scorllDown:function(e){},					  //页面下滑刷新数据事件
	scorlling:function(e){}						  //页面下滑过程事件
})
####图片处理类-imageDealClass####
bullet.zipImage({											//图片压缩
	imgSrc:"",												//图片地址或base64码（必填参数）
	width:200,												//图片压缩宽度，优先高度，按照宽高比缩放高度
	height:200,												//图片压缩高度，按照高宽比缩放宽度
	quality:0.7,											//图片压缩质量，0-1数字，默认为0.7
	fileType:"jpeg",										//图片文件类型，默认为jpeg
	done:(base64)=>{										//压缩成功回调方法，传入压缩图片base64码
		console.log(base64);
	}
})

bullet.toFileBlob(base64,0)									//base64码转换成file对象或blob对象，方便上传
															//0 转换为blob对象		1 转换为file对象